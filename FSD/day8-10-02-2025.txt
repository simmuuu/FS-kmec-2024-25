<!--
Order Management - using JSON Object
Objective: Implement the CRUD operations.

Requirements:
----------------------------------------------------------
Method	Endpoint	            Description
----------------------------------------------------------
POST	   /orders	    		Create a new order
GET	       /orders	    		Get all orders
GET	       /orders/:id	    Get a order by ID
PUT	       /orders/:id		Update a order by ID
DELETE	   /orders/:id		Delete a order by ID
----------------------------------------------------------

Reference JSON format for Object:
--------------------------------------
{ 
	id: 1,
	customerName: "Azar",
	totalPrice: 150.0
}

NOTE: id value starts with 1, and increments by 1, for every new entry.

2. Implementation Requirements:
---------------------------------
Create a JSON Object (local)
Implement proper error handling
Add data validation


3. API Response Format:
------------------------	
Method: POST
Path: /orders

Response:
    If successful:
      res.status(201).send(order);
========================================================

Method: GET
Path: /orders

Response:
    If successful:
      res.send(orders);

========================================================
Method: GET
Path: /orders/:id

NOTE: pass (id value as URI params)

Response:
    If successful:
		res.send(order);
    
    If not found:
        res.status(404).send();
========================================================
Method: PUT
Path: /orders/:id

NOTE: pass (id value as URI params)

Response:
    If successful:
		res.send(order);
    
    If not found:
        res.status(404).send();
==========================================================

Method: DELETE
Path: /orders/:id

NOTE: pass (id value as URI params)

Response:
    If successful:
        res.status(200).send();

-->

<config>
    <url value=""></url>
</config>
